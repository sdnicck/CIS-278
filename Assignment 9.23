class card

#ifndef CARD_H
#define CARD_H

#pragma once
#include <string>
#include <array>
#include <iostream>

using namespace std;


class Card
{
public:

	enum class Face { Ace, Duece, Three, Four, Five, Six, Seven, Eight, Nine, Ten, Jack, Queen, King };

	enum class Suit { Spades, Clubs, Diamonds, Hearts };

	Card(string faceVar = "Ace", string suit = "Spades") :
		faceVar("Ace"),
		suitVar("Spades")
	{}

	const array < string, 13> face{ "Ace", "Duece", "Three", "Four", "Five", "Sixe", "Seven", "Eight", "Nine", "Ten", "Jack", "Queen", "King" };
	const array < string, 4> suit{ "Spades", "Clubs", "Diamonds", "Hearts" };


	string toString(string face[], string suit[]) {
		for (int i = 0; i < 13; i++) {
			for (int a = 0; a < 4; a++) {

				return face[i] + "of" + suit[a];
			}
		}

	}

private:
	string faceVar;
	string suitVar;

};
#endif CARD_H

//{ "Ace", "Duece", "Three", "Four", "Five", "Sixe", "Seven", "Eight", "Nine", "Ten", "Jack", "Queen", "King" }
//{ "Spades", "Clubs", "Diamonds", "Hearts" }

//const size_t sizeFace{ 13 };
//const size_t sizeSuit{ 4 };

deck of cards
#pragma once
#include <string>
#include <iostream>
#include "Card.h"
#include <vector>

using namespace std;

#ifndef DECKOFCARDS_H
#define DECKOFCARDS_H
class DeckOfCards
{
public:
	DeckOfCards() {
	}

	Card deckofCards;


	deckofCards.toString();

	void shuffle() {

	}
	string dealCard() {

	}
	bool moreCards() {

	}

private:
	unsigned int currentCard;
	vector <Card> deck;

};

#endif  DECKOFCARDS_H

driver class
// Assignment 8 (9.23).cpp : This file contains the 'main' function. Program execution begins and ends there.
//

#include <iostream>

int main()
{
    std::cout << "Hello World!\n";
}

// Run program: Ctrl + F5 or Debug > Start Without Debugging menu
// Debug program: F5 or Debug > Start Debugging menu

// Tips for Getting Started: 
//   1. Use the Solution Explorer window to add/manage files
//   2. Use the Team Explorer window to connect to source control
//   3. Use the Output window to see build output and other messages
//   4. Use the Error List window to view errors
//   5. Go to Project > Add New Item to create new code files, or Project > Add Existing Item to add existing code files to the project
//   6. In the future, to open this project again, go to File > Open > Project and select the .sln file


